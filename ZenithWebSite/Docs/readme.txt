Tristan Habdas A00687587 tristram.h@live.com

What is Completed:

Activity and Event database tables are seeded
Admin and Member accounts are seeded
Separate Class Library for EF model
One database file in App_Data folder
One EF context class
EF migrations commands in docs/migrations.txt
Filenames, directory names, solution name, project names & database names as prescribed

What Isn't Completed:

Everything else

Major Challenges:

Migrations gave me one problem after another. I was able to use code first to generate and seed my database, however, every following update-database... command gave me error after error. I'm not entirely sure how it started but at some point, I noticed that my Event table had created an additional column called Activity_ActivityID that it had also set as a Foreign Key to the Activity table. Earlier on, I had made a mistake when seeding my tables and instantiating Activity and Event objects so I assumed that I had somehow made the error here even though I know I never used "Activity_ActivityID" anywhere. However, based on later issues, I wonder if it could have been autogenerated? Could Entity Framework have generated the column and established the Foreign Key because of the Activity object present within Event and the absense of me supplying a Foreign Key? I attempted a variety of fixes including removing the creation of Activity_ActivityID within the ...InitialCreate.cs file, dropping the column, dropping the tables, replacing the database, starting over with the Migrations from scratch, but somehow Activity_ActivityID would always regenerate (hence my wondering whether or not it was automatically created). After wasting most of a day struggling with this, I gave up. At this point, I would honestly rather cut off one of my legs than even look at this assignment again.